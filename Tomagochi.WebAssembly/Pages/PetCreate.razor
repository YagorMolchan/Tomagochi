@page "/petCreate";
@using Tomagochi.BLL.DTO;
@using Tomagochi.BLL.Interfaces;
@inject IPetService _service;

<h2>Create Pet Form</h2>
<EditForm Model="@_petDTO" OnValidSubmit="@Create">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="name"></label>
        <div class="col-md-10">
            <InputText id="name" @bind-Value="@_petDTO.Name" class="form-control pet-name"/>
            <ValidationMessage For="@(() => _petDTO.Name)"/>
        </div>        
    </div>
    <div class="pet-container">
        <div class="pet-form">
            <div class="form-group">
                <h6>Body</h6>
                <div class="image-container">
                    @foreach (var item in _petDTO.Bodies)
                    {
                        <button @onclick="(() => OnBodyClick(item))" class="image-button" id="@item">
                            <img src="@item" width="80" height="80"/>
                        </button>
                    }
                </div>
            </div>
            <div class="form-group">
                <h6>Eyes</h6>
                <div class="image-container">
                    @foreach (var item in _petDTO.Eyes)
                    {
                        <button @onclick="(() => OnEyesClick(item))" class="image-button" id="@item">
                            <img src="@item" width="80" height="80"/>
                        </button>
                     }
                </div>
            </div>
            <div class="form-group">
                    <h6>Nose</h6>
                    <div class="image-container">
                        @foreach (var item in _petDTO.Noses)
                        {
                            <button @onclick="(() => OnNosesClick(item))" class="image-button" id="@item">
                                <img src="@item" width="80" height="80"/>
                            </button>
                        }
                    </div>
                </div>
            <div class="form-group">
                    <h6>Mouth</h6>
                    <div class="image-container">
                        @foreach (var item in _petDTO.Mouths)
                        {
                            <button @onclick="(() => OnMouthsClick(item))" class="image-button" id="@item">
                                <img src="@item" width="80" height="80"/>
                            </button>
                        }
                    </div>
                </div>
        </div>
       <div class="pet-image">
            <div>
                @if(_petDTO.Eye is not null)
                {
                    <img src="@_petDTO.Eye" width="80" height="80"/>
                }
            </div>
            <div>
                @if(_petDTO.Nose is not null)
                {
                    <img src="@_petDTO.Nose" width="80" height="80"/>
                }
            </div>
            <div>
                @if(_petDTO.Mouth is not null)
                {
                    <img src="@_petDTO.Mouth" width="80" height="80"/>
                }
            </div>
            <div>
                @if(_petDTO.Body is not null)
                {
                    <img src="@_petDTO.Body" width="80" height="80"/>
                }
            </div>
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-success">Create</button>
    </div>
</EditForm>



@code {

    private PetDTO _petDTO;

    protected override async Task OnInitializedAsync()
    {
        _petDTO = await _service.GetImages();
    }

    private async Task Create()
    {
        await _service.CreatePet(_petDTO);
    }

    private void OnBodyClick(string body){
        _petDTO.Body = body;
    }

    private void OnEyesClick(string eyes)
    {
        _petDTO.Eye = eyes;
    }

    private void OnNosesClick(string noses)
    {
        _petDTO.Nose = noses;
    }

    private void OnMouthsClick(string mouths)
    {
        _petDTO.Mouth = mouths;
    }

}
